"use client";

import { create } from "zustand";
import axios from "axios";

// üìù Type Definition - ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Post
type Post = { 
  id: number; 
  title: string; 
  body: string; 
  userId: number;
};

// üè™ State Interface - ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡∏≠‡∏á Store State
type State = {
  // üìä Data State
  items: Post[];                    // ‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
  loading: boolean;                 // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
  error: string | null;             // ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° error (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
  
  // üéØ Actions - ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
  fetchData: () => Promise<void>;               // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
  fetchPostById: (id: number) => Promise<Post | null>;  // ‡∏î‡∏∂‡∏á‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏ï‡∏≤‡∏° ID
  addPost: (post: Omit<Post, 'id'>) => void;    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÇ‡∏û‡∏™‡∏ï‡πå‡πÉ‡∏´‡∏°‡πà
  updatePost: (id: number, updates: Partial<Post>) => void; // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÇ‡∏û‡∏™‡∏ï‡πå
  deletePost: (id: number) => void;             // ‡∏•‡∏ö‡πÇ‡∏û‡∏™‡∏ï‡πå
  clearError: () => void;                       // ‡∏•‡πâ‡∏≤‡∏á error
  reset: () => void;                            // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï state
};

// üé® Zustand Store Creation
export const usePosts = create<State>((set, get) => ({
  // üéØ Initial State - ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
  items: [],
  loading: false,
  error: null,

  // üì• Fetch All Posts - ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
  fetchData: async () => {
    try {
      // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î
      set({ loading: true, error: null });
      
      // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API
      const { data } = await axios.get<Post[]>(
        "https://jsonplaceholder.typicode.com/posts"
      );
      
      // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó state ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
      set({ items: data, loading: false });
      
    } catch (error) {
      // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ error
      const errorMessage = error instanceof Error ? error.message : "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•";
      set({ error: errorMessage, loading: false });
    }
  },

  // üîç Fetch Single Post - ‡∏î‡∏∂‡∏á‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏ï‡∏≤‡∏° ID
  fetchPostById: async (id: number) => {
    try {
      set({ loading: true, error: null });
      
      const { data } = await axios.get<Post>(
        `https://jsonplaceholder.typicode.com/posts/${id}`
      );
      
      // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó items ‡∏´‡∏≤‡∏Å post ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏ô state
      const currentItems = get().items;
      const existingPost = currentItems.find(item => item.id === id);
      
      if (!existingPost) {
        set({ items: [...currentItems, data] });
      }
      
      set({ loading: false });
      return data;
      
    } catch (error) {
      const errorMessage = error instanceof Error ? error.message : "‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£";
      set({ error: errorMessage, loading: false });
      return null;
    }
  },

  // ‚ûï Add New Post - ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÇ‡∏û‡∏™‡∏ï‡πå‡πÉ‡∏´‡∏°‡πà
  addPost: (newPost) => {
    const currentItems = get().items;
    const newId = Math.max(...currentItems.map(item => item.id), 0) + 1;
    const postWithId = { ...newPost, id: newId };
    
    set({ items: [postWithId, ...currentItems] });
  },

  // ‚úèÔ∏è Update Post - ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÇ‡∏û‡∏™‡∏ï‡πå
  updatePost: (id, updates) => {
    const currentItems = get().items;
    const updatedItems = currentItems.map(item => 
      item.id === id ? { ...item, ...updates } : item
    );
    
    set({ items: updatedItems });
  },

  // üóëÔ∏è Delete Post - ‡∏•‡∏ö‡πÇ‡∏û‡∏™‡∏ï‡πå
  deletePost: (id) => {
    const currentItems = get().items;
    const filteredItems = currentItems.filter(item => item.id !== id);
    
    set({ items: filteredItems });
  },

  // üßπ Clear Error - ‡∏•‡πâ‡∏≤‡∏á error
  clearError: () => {
    set({ error: null });
  },

  // üîÑ Reset State - ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï state ‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
  reset: () => {
    set({ items: [], loading: false, error: null });
  },
}));